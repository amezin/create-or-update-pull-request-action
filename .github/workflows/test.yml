name: test

on:
  workflow_dispatch:

  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  e2e:
    runs-on: ubuntu-latest

    if: github.event.pull_request.head.repo.node_id == github.event.pull_request.base.repo.node_id

    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - id: rand
        run: echo "rand=$(openssl rand -hex 12)" >>"$GITHUB_OUTPUT"

      - id: create-branch
        uses: actions/github-script@v7
        with:
          script: |
            await github.request('POST /repos/{owner}/{repo}/git/refs', {
              owner: process.env.GITHUB_REPOSITORY_OWNER,
              repo: process.env.GITHUB_REPOSITORY.split('/')[1],
              ref: `refs/heads/testing/test-branch-${process.env.BRANCH_ID}`,
              sha: '6fe7dee2f348caea37a291f67041ab205fa98f50',
            });
        env:
          BRANCH_ID: ${{ steps.rand.outputs.rand }}

      - id: create-pr
        uses: ./.
        with:
          title: Test pull request ${{ steps.rand.outputs.rand }}
          base: testing/test-branch-${{ steps.rand.outputs.rand }}

      - run: test "$(gh pr view "$PR_NUM" --json title -t '{{.title}}')" = "Test pull request $BRANCH_ID"
        env:
          BRANCH_ID: ${{ steps.rand.outputs.rand }}
          PR_NUM: ${{ steps.create-pr.outputs.pull_number }}

      - run: test "$(gh pr view "$PR_NUM" --json baseRefOid -t '{{.baseRefOid}}')" = "6fe7dee2f348caea37a291f67041ab205fa98f50"
        env:
          PR_NUM: ${{ steps.create-pr.outputs.pull_number }}

      - run: test "$(gh pr view "$PR_NUM" --json headRefOid -t '{{.headRefOid}}')" = "$GITHUB_SHA"
        env:
          PR_NUM: ${{ steps.create-pr.outputs.pull_number }}

      - run: test "$(gh pr view "$PR_NUM" --json state -t '{{.state}}')" = "open"
        env:
          PR_NUM: ${{ steps.create-pr.outputs.pull_number }}

      - id: update-pr
        uses: ./.
        with:
          title: Test pull request ${{ steps.rand.outputs.rand }} with updated title
          base: testing/test-branch-${{ steps.rand.outputs.rand }}

      - run: test "$PR_NUM_1" = "$PR_NUM_2"
        env:
          PR_NUM_1: ${{ steps.create-pr.outputs.pull_number }}
          PR_NUM_2: ${{ steps.update-pr.outputs.pull_number }}

      - run: test "$(gh pr view "$PR_NUM" --json title -t '{{.title}}')" = "Test pull request $BRANCH_ID with updated title"
        env:
          BRANCH_ID: ${{ steps.rand.outputs.rand }}
          PR_NUM: ${{ steps.create-pr.outputs.pull_number }}

      - run: test "$(gh pr view "$PR_NUM" --json baseRefOid -t '{{.baseRefOid}}')" = "6fe7dee2f348caea37a291f67041ab205fa98f50"
        env:
          PR_NUM: ${{ steps.create-pr.outputs.pull_number }}

      - run: test "$(gh pr view "$PR_NUM" --json headRefOid -t '{{.headRefOid}}')" = "$GITHUB_SHA"
        env:
          PR_NUM: ${{ steps.create-pr.outputs.pull_number }}

      - run: test "$(gh pr view "$PR_NUM" --json state -t '{{.state}}')" = "open"
        env:
          PR_NUM: ${{ steps.create-pr.outputs.pull_number }}

      - uses: actions/github-script@v7
        if: always() && steps.create-branch.outcome == 'success'
        with:
          script: |
            await github.request('DELETE /repos/{owner}/{repo}/git/refs/{ref}', {
              owner: process.env.GITHUB_REPOSITORY_OWNER,
              repo: process.env.GITHUB_REPOSITORY.split('/')[1],
              ref: `heads/testing/test-branch-${process.env.BRANCH_ID}`,
            });
        env:
          BRANCH_ID: ${{ steps.rand.outputs.rand }}
