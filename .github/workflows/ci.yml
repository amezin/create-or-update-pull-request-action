name: ci

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: '18 11 * * 6'

defaults:
  run:
    shell: bash

jobs:
  shared:
    uses: amezin/js-actions-common/.github/workflows/shared-ci.yml@3946b5832865f2403b9fd7aa7ce80d34373dd66e # v1.0.9
    permissions:
      contents: read

  test:
    needs:
      - shared

    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.node_id == github.event.pull_request.base.repo.node_id
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Generate branch name
        id: ref_name
        run: |
          REF_NAME="temp/test-branch-$GITHUB_RUN_ID"
          echo "ref_name=$REF_NAME" >>"$GITHUB_OUTPUT"
          echo "REF_NAME=$REF_NAME" >>"$GITHUB_ENV"

      - name: Create base branch
        id: create-branch
        run: |
          git fetch origin 6fe7dee2f348caea37a291f67041ab205fa98f50
          git branch "$REF_NAME" 6fe7dee2f348caea37a291f67041ab205fa98f50
          git push origin "$REF_NAME"

      - name: Create pull request
        id: create-pr
        uses: ./.
        with:
          title: Test pull request ${{ steps.ref_name.outputs.ref_name }}
          base: ${{ steps.ref_name.outputs.ref_name }}
          head: ${{ github.event.repository.default_branch }}
          draft: true

      - run: gh pr view "$PR_NUM" --json state,isDraft,baseRefOid,baseRefName,headRefName,title | tee created.json
        env:
          PR_NUM: ${{ steps.create-pr.outputs.number }}
          GH_TOKEN: ${{ github.token }}

      - run: test "$(jq -r .state created.json)" = OPEN
      - run: test "$VALUE" = open
        env:
          VALUE: ${{ fromJSON(steps.create-pr.outputs.pull_request).state }}

      - run: test "$(jq -r .isDraft created.json)" = "true"
      - run: test "$VALUE" = "true"
        env:
          VALUE: ${{ fromJSON(steps.create-pr.outputs.pull_request).draft }}

      - run: test "$(jq -r .title created.json)" = "Test pull request $REF_NAME"
      - run: test "$VALUE" = "Test pull request $REF_NAME"
        env:
          VALUE: ${{ fromJSON(steps.create-pr.outputs.pull_request).title }}

      - run: test "$(jq -r .baseRefOid created.json)" = 6fe7dee2f348caea37a291f67041ab205fa98f50
      - run: test "$VALUE" = 6fe7dee2f348caea37a291f67041ab205fa98f50
        env:
          VALUE: ${{ fromJSON(steps.create-pr.outputs.pull_request).base.sha }}

      - run: test "$(jq -r .baseRefName created.json)" = "$REF_NAME"
      - run: test "$VALUE" = "$REF_NAME"
        env:
          VALUE: ${{ fromJSON(steps.create-pr.outputs.pull_request).base.ref }}

      - run: test "$(jq -r .headRefName created.json)" = "$HEAD_REF"
        env:
          HEAD_REF: ${{ github.event.repository.default_branch }}

      - run: test "$VALUE" = "$HEAD_REF"
        env:
          HEAD_REF: ${{ github.event.repository.default_branch }}
          VALUE: ${{ fromJSON(steps.create-pr.outputs.pull_request).head.ref }}

      - name: Update pull request
        id: update-pr
        uses: ./.
        with:
          title: Test pull request ${{ steps.ref_name.outputs.ref_name }} with updated title
          body: Updated pull request body
          base: ${{ steps.ref_name.outputs.ref_name }}
          head: ${{ github.event.repository.default_branch }}

      - run: test "$PR_NUM_1" = "$PR_NUM_2"
        env:
          PR_NUM_1: ${{ steps.create-pr.outputs.number }}
          PR_NUM_2: ${{ steps.update-pr.outputs.number }}

      - run: gh pr view "$PR_NUM" --json state,isDraft,baseRefOid,baseRefName,headRefName,title,body | tee updated.json
        env:
          PR_NUM: ${{ steps.update-pr.outputs.number }}
          GH_TOKEN: ${{ github.token }}

      - run: test "$(jq -r .state updated.json)" = OPEN
      - run: test "$VALUE" = open
        env:
          VALUE: ${{ fromJSON(steps.update-pr.outputs.pull_request).state }}

      - run: test "$(jq -r .isDraft created.json)" = "true"
      - run: test "$VALUE" = "true"
        env:
          VALUE: ${{ fromJSON(steps.update-pr.outputs.pull_request).draft }}

      - run: test "$(jq -r .title updated.json)" = "Test pull request $REF_NAME with updated title"
      - run: test "$VALUE" = "Test pull request $REF_NAME with updated title"
        env:
          VALUE: ${{ fromJSON(steps.update-pr.outputs.pull_request).title }}

      - run: test "$(jq -r .body updated.json)" = "Updated pull request body"
      - run: test "$VALUE" = "Updated pull request body"
        env:
          VALUE: ${{ fromJSON(steps.update-pr.outputs.pull_request).body }}

      - run: test "$(jq -r .baseRefOid updated.json)" = 6fe7dee2f348caea37a291f67041ab205fa98f50
      - run: test "$VALUE" = 6fe7dee2f348caea37a291f67041ab205fa98f50
        env:
          VALUE: ${{ fromJSON(steps.update-pr.outputs.pull_request).base.sha }}

      - run: test "$(jq -r .baseRefName created.json)" = "$REF_NAME"
      - run: test "$VALUE" = "$REF_NAME"
        env:
          VALUE: ${{ fromJSON(steps.update-pr.outputs.pull_request).base.ref }}

      - run: test "$(jq -r .headRefName updated.json)" = "$HEAD_REF"
        env:
          HEAD_REF: ${{ github.event.repository.default_branch }}

      - run: test "$VALUE" = "$HEAD_REF"
        env:
          HEAD_REF: ${{ github.event.repository.default_branch }}
          VALUE: ${{ fromJSON(steps.update-pr.outputs.pull_request).head.ref }}

      - name: Don't update pull request
        id: dont-update-pr
        uses: ./.
        with:
          title: Test pull request ${{ steps.ref_name.outputs.ref_name }} title update ignored
          body: Pull request body update ignored
          base: ${{ steps.ref_name.outputs.ref_name }}
          head: ${{ github.event.repository.default_branch }}
          update: false

      - run: test "$PR_NUM_1" = "$PR_NUM_2"
        env:
          PR_NUM_1: ${{ steps.update-pr.outputs.number }}
          PR_NUM_2: ${{ steps.dont-update-pr.outputs.number }}

      - run: gh pr view "$PR_NUM" --json state,isDraft,baseRefOid,baseRefName,headRefName,title,body | tee not-updated.json
        env:
          PR_NUM: ${{ steps.dont-update-pr.outputs.number }}
          GH_TOKEN: ${{ github.token }}

      - run: diff -u updated.json not-updated.json

      - run: test "$VALUE" = open
        env:
          VALUE: ${{ fromJSON(steps.dont-update-pr.outputs.pull_request).state }}

      - run: test "$VALUE" = "true"
        env:
          VALUE: ${{ fromJSON(steps.dont-update-pr.outputs.pull_request).draft }}

      - run: test "$VALUE" = "Test pull request $REF_NAME with updated title"
        env:
          VALUE: ${{ fromJSON(steps.dont-update-pr.outputs.pull_request).title }}

      - run: test "$VALUE" = "Updated pull request body"
        env:
          VALUE: ${{ fromJSON(steps.dont-update-pr.outputs.pull_request).body }}

      - run: test "$VALUE" = 6fe7dee2f348caea37a291f67041ab205fa98f50
        env:
          VALUE: ${{ fromJSON(steps.dont-update-pr.outputs.pull_request).base.sha }}

      - run: test "$VALUE" = "$REF_NAME"
        env:
          VALUE: ${{ fromJSON(steps.dont-update-pr.outputs.pull_request).base.ref }}

      - run: test "$VALUE" = "$HEAD_REF"
        env:
          HEAD_REF: ${{ github.event.repository.default_branch }}
          VALUE: ${{ fromJSON(steps.dont-update-pr.outputs.pull_request).head.ref }}

      - name: Delete test branch
        if: always() && steps.create-branch.outcome == 'success'
        run: |
          git push origin ":refs/heads/$REF_NAME"
